
// using the map Approach time complexity o(n) hai 
class Solution {
public:
    bool hasCycle(ListNode *head) {
        map<ListNode*, bool> visited;
        ListNode* temp = head;

        while(temp != NULL){

            if(visited[temp] == true){
                return true;

            }
            visited[temp] = true;
            temp = temp->next;
        }
        return false;
    }
};
----------------------------------------------------- TC -> O(1)

class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode* fast = head;
        ListNode* slow = head;

        while(fast != NULL && fast->next != NULL){
            slow = slow->next;
            fast = fast->next->next;

            if(fast == slow){
                return true;
            }
        }
        return false;
    }
};
