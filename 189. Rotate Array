TC= O(N) SC= O(1)
(Optimal): Reverse Method ðŸ”¥
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
      k = k % nums.size();
      reverse(nums.begin(), nums.end());  // 7 6 5  4 3 2 1
      reverse(nums.begin(), nums.begin()+k);  // 5 6 7
      reverse(nums.begin()+k, nums.end());  // 5 6 7   1 2 3 4
    }
};
----------------------------------------------------------------------
Approach 2: Extra Array use karke
Ek new array banao.
Har element ko (i + k) % n index pe daalo.
Fir us array ko original me copy karo.
 agar jayse 3 % 7 karte haito jo chota valu hoga wahi reminder ho jata hai lekin agar 3 wala value 7 se bara hogya tab phir calcualtion karo

TC: O(n)
SC: O(n)
\
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int> temp(n);
        for (int i = 0; i < n; i++) {
            temp[(i + k) % n] = nums[i];
        }
        nums = temp;
    }
};
