//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution {
  public:
  void merge(vector<int>& arr, int start, int mid, int end){
      int left = start;
      int right = mid+1;
      vector<int>ans;
      
      while(left<= mid && right <= end){
          if(arr[left] <= arr[right]){
              ans.push_back(arr[left++]);
          }
          else{
              ans.push_back(arr[right++]);
          }
      }
      while(left <= mid){
          ans.push_back(arr[left++]);
      }
      while(right <= end){
          ans.push_back(arr[right++]);
      }
      
      for(int i=0; i<ans.size(); i++){
          arr[start+i] = ans[i];
      }
      
  }
  void solve(vector<int>& arr, int start, int end){
      
      if(start >= end){
          return;
      }
      int mid = start + (end - start)/2;
      solve(arr, start, mid);
      solve(arr, mid+1, end);
      
      merge(arr, start, mid, end);
      
  }
    void mergeSort(vector<int>& arr, int l, int r) {
        int start = l;
        int end = r;
        
        solve(arr, start, end);
        
    }
};


//{ Driver Code Starts.

int main() {
    string ts;
    getline(cin, ts);
    int t = stoi(ts);
    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        Solution obj;
        obj.mergeSort(arr, 0, arr.size() - 1);
        for (int i = 0; i < arr.size(); i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
        cout << "~" << endl;
    }
    return 0;
}

// } Driver Code Ends
