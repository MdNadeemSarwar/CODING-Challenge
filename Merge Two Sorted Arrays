#include <bits/stdc++.h>
void merge(vector<int>& arr1, int start, int mid, int end){
    int left = start;
    int right = mid +1;
    vector<int>ans;

    while(left <= mid && right <= end){
        if(arr1[left] < arr1[right]){
            ans.push_back(arr1[left++]);
        }
        else{
            ans.push_back(arr1[right++]);
        }
    }
    while(left <= mid){
        ans.push_back(arr1[left++]);
    }
    while(right<= end){
        ans.push_back(arr1[right++]);
    }

    for(int i=0; i<ans.size(); i++){
        arr1[start + i]= ans[i];
    }
    
}
void solve(vector<int>& arr1, int start, int end){
    if(start >= end){
        return;
    }
    int mid = start + (end - start)/2;
    solve(arr1, start, mid);
    solve(arr1, mid+1, end);

    merge(arr1, start, mid, end);
}
vector<int> ninjaAndSortedArrays(vector<int>& arr1, vector<int>& arr2, int m, int n) {

    for(int i=m, j=0; j<arr2.size(); j++){
        arr1[i]=arr2[j];
        i++;
    }

    int start = 0;
    int end = arr1.size()-1;
    solve(arr1, start, end);

    return arr1;
}
