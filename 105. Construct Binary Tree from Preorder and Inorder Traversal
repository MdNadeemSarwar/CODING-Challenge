class Solution {
public:
    TreeNode* solve(vector<int>& preorder,vector<int>& inorder, int &pre, int start, int end, int size){

        if(pre >= size  || start > end){
            return NULL;
        }
        int rootvalue = preorder[pre];
        pre++;
        TreeNode* root = new TreeNode(rootvalue);

        int i = start; 

        for(; i<inorder.size(); i++){
            if(inorder[i] == rootvalue){
                break;
            }
        }

        root->left = solve(preorder, inorder, pre, start, i - 1, size);
        root->right = solve(preorder, inorder, pre, i + 1, end, size);

        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int pre = 0;
        int n = preorder.size();
        return solve(preorder, inorder, pre, 0, n-1, n);
    }
};
